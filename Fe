func extractFeatureVector(from image: UIImage) async throws -> [Double]? {
    guard let cgImage = image.cgImage else { return nil }

    let model = try MobileNetV2_FeatureExtractor(configuration: .init()).model
    let visionModel = try VNCoreMLModel(for: model)

    return try await withCheckedThrowingContinuation { continuation in
        let request = VNCoreMLRequest(model: visionModel) { request, error in
            if let error = error {
                continuation.resume(throwing: error)
                return
            }

            guard let results = request.results as? [VNCoreMLFeatureValueObservation],
                  let array = results.first?.featureValue.multiArrayValue else {
                continuation.resume(returning: nil)
                return
            }

            // Flatten: [1, 1280, 1, 1] â†’ [1280]
            let vector = (0..<array.count).map { array[$0].doubleValue }
            continuation.resume(returning: vector)
        }

        try? VNImageRequestHandler(cgImage: cgImage).perform([request])
    }
}
