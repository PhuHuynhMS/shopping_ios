import torch
import torchvision.models as models
import torchvision.transforms as transforms
from PIL import Image
import requests
import io
import json

# Load mô hình
mobilenet = models.mobilenet_v2(pretrained=True).features.eval()

# Tiền xử lý ảnh theo chuẩn ImageNet
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize(
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]
    )
])

def extract_vector_from_url(image_url):
    try:
        response = requests.get(image_url, timeout=10)
        image = Image.open(io.BytesIO(response.content)).convert("RGB")
        input_tensor = transform(image).unsqueeze(0)
        with torch.no_grad():
            output = mobilenet(input_tensor)
            pooled = torch.nn.functional.adaptive_avg_pool2d(output, (1, 1))
            vector = pooled.view(-1).tolist()  # [1280]
        return vector
    except Exception as e:
        print(f"Lỗi khi xử lý ảnh {image_url}: {e}")
        return None

# Load file products.json
with open("products.json", "r", encoding="utf-8") as f:
    products = json.load(f)

# Thêm vector cho từng sản phẩm
for product in products:
    print(f"Đang xử lý: {product['name']}")
    vector = extract_vector_from_url(product["imageUrl"])
    if vector:
        product["vector"] = vector
    else:
        product["vector"] = []

# Lưu lại file mới
with open("products_with_vector.json", "w", encoding="utf-8") as f:
    json.dump(products, f, ensure_ascii=False, indent=2)
